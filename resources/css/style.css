/***********************/
/* BODY CSS */
/***********************/

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

/* html CSS */
/* Lato is the Google Font, linked in the 'head' tag of 'index.html' */
html {
	background-color: #fff;
	color: #555;
	font-family: 'Lato', 'Arial', sans-serif; 
	font-weight: 300;
	font-size: 20px;
	text-rendering: optimizeLegibility;
}

/* The '.clearfix' property is something you should put on your styles, especially if you use any type of floats. */
/* The '.clearfix:after will clear the float after an element */
.clearfix {zoom:1}
.clearfix:after {
	content: '.';
	clear: both;
	display: block;
	height: 0;
	visibility: hidden;
}

/***********************/
/* REUSABLE COMPONENTS */
/***********************/

/* This works in conjunction with the 'grid.css' file */
/* This will be the only value that will have an absolute value in pixels. You should define all other layout margins and paddings in percentages and not in pixels */
.row {
	max-width: 1140px;
	margin: 0 auto;
}

section {
	padding: 80px 0;
}

.box {
	padding: 1%;
}

/***********************/
/* HEADINGS */
/***********************/

h1,
h2,
h3 {
	font-weight: 300;
	text-transform: uppercase;
}

h1 {
	margin-top: 0;
	margin-bottom: 20px;
	color: #fff;
	font-size: 240%;/* In responsive design you want everything to be relative. This will be 48px or 200% of html font-size, 20px */
	word-spacing: 4px;
	letter-spacing: 1px;
}

h2 {
	font-size: 180%;
	word-spacing: 2px;
	text-align: center;
	margin-bottom: 30px;
	letter-spacing: 1px;
}

h3 {
	font-size: 110%;
	margin-bottom: 15px;
}

/* :after puts content on the web site using only css */
h2:after {
	display: block;
	height: 2px;
	background-color: #e67e22;
	content: ""; /* Whenever you do a :after pseudo-class, you have to specify its content, and in this case, you don't want any words to appear */
	width: 100px;
	margin: 0 auto;
	margin-top: 30px;
}

.long-copy {
	line-height: 145%;
	width: 70%;
	margin-left: 15%; /* The total width is 100%, so if you want .long-copy centered, the remaining 30% should be distributed to both sides, so 15% left, 15% right, plust the 70% */
}

.box p {
	font-size: 90%;
	line-height: 145%;
}

/* The .icon-big although a icon can be treated as a font */
.icon-big {
	font-size: 350%;
	display: block;
	color: #e67e22;
	margin-bottom: 10px;
}

/* The .icon-small although a icon can be treated as a font */
.icon-small {
	display: inline-block;
	width: 30px;
	text-align: center;
	color: #e67e22;
	font-size: 120%;
	
	/* secrets to align text and icons */
	line-height: 120%;
	vertical-align: middle;
	margin-top: -5px;
	margin-right: 10px;
}

/***********************/
/* BUTTONS */
/***********************/

a:link,
a:visited {
	color: #e67e22;
	text-decoration: none;
	border-bottom: 1px solid #e67e22;
	padding-bottom: 1px;
	transition: border-bottom 0.2s, color: 0.2s;
}

a:hover,
a:active {
	color: #555;
	border-bottom: 1px solid transparent; 
}

/* :link is the anchor tag in it's normal state */
/* :visited is the anchor tag after the link has been visited */
.btn:link,
.btn:visited,
input[type=submit] {
	display: inline-block; /* The inline-block element does not force a line break. You can add both padding and margin to a inline-block element */
	padding: 10px 30px;
	text-decoration: none;
	border-radius: 200px;
	color: #fff;
	transition: background-color 0.2s, border 0.2s, color 0.2s;

}

.btn-full:link,
.btn-full:visited,
input[type=submit] {
	background-color: #e67e22;
	border: 1px solid #e67e22;
	margin-right: 15px; 
}

.btn-ghost:link,
.btn-ghost:visited {
	border: 1px solid #e67e22;
	color: #e67e22;
}

.btn:hover,
.btn:active,
input[type=submit]:hover,
input[type=submit]:active {
	background-color: #cf6d17;  
}

.btn-full:hover,
.btn-full:active {
	border: 1px solid #cf6d17;
}

.btn-ghost:hover,
.btn-ghost:active {
	border: 1px solid #cf6d17;
	color: #fff;
}

/***********************/
/* HEADER */
/***********************/

/* The 'background-attachment: fixed' creates a parallax effect */
header {
	background-image: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url(img/hero.jpg); /*The linear-gradient when on top of the image acts like two background images at the same time. You need to have two colors inside the parenthesis*/
	height: 100vh; /*vh means it's 100% of the viewport*/
	background-size: cover;
	background-position: center;
	background-attachment: fixed;
}

/* This will not use the responsive flud grid b/c you want this box to be absolutely positioned. This is the only way you can both vertically and horizontally center it */
.hero-text-box {
	position: absolute;
	width: 1140px;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%); /*This translates the element by half of its width and its height up and to the left*/
}

.logo {
	height: 100px;
	width: auto;
	float: left;
	margin-top: 20px;
}

.main-nav {
	float: right;
	list-style: none;
	margin-top: 20px;
	line-height: 100px; /* The line-height in conjunction with the margin-top will vertically align the .main-nav to the .logo */
}

.main-nav li {
	display: inline-block;
	margin-left: 40px;
}

.main-nav li a:link,
.main-nav li a:visited {
	padding: 8px 0 8px 0;
	color: #fff;
	text-decoration: none;
	text-transform: uppercase;
	font-size: 90%; /* If you want 18px it would be 18/20. Again 20 comes from the font-size listed in the BODY CSS */
	border-bottom: 2px transparent; /* This is necessary before the :hover and :active below */ 
	transition: border-bottom 0.2s;
}

.main-nav li a:hover,
.main-nav li a:active {
	border-bottom: 2px solid #e67e22
}

/***********************/
/* FEATURES */
/***********************/

.section-features .long-copy {
	margin-bottom: 30px;
}

/***********************/
/* MEALS */
/***********************/

.section-meals {
	padding: 0;  
}

.meals-showcase {
	list-style: none;
	width: 100%;
}

.meals-showcase li {
	display: block;
	float: left;
	width: 25%;
}

/* This has the exact width of it's parent which is .meals-showcase li */
/* The margin 0 overrides any margin previously applied */
/* The overflow property with hidden attribute will hide any portion of the image which overlows past the browser size */
.meal-photo {
	width: 100%;
	margin: 0;
	overflow: hidden;
	background-color: #000;
}
/* The transform property with the scale attribute makes the image larger by the amount being passed */
/* The transition property along with the transform or opacity attribute provides a smooth animation between the image states */
.meal-photo img {
	opacity: 0.7;
	width: 100%;
	height: auto;
	transform: scale(1.15);
	transition: transform 0.5s, opacity 0.5s;
}

/* The transform property in conjunction with the scale attribute animates the image from 1.15 back to 1.04; 1.04 is used to do the image's normal size of (1) having some white space */
.meal-photo img:hover {
	opacity: 1;
	transform: scale(1.04);
}

/***********************/
/* HOW IT WORKS */
/***********************/

.section-steps {
	background-color: #f4f4f4;
}

/* The .steps-box class is associated to two elements. The ':first-of-type' will select the first association in comparison to selecting both */
/* The text-align property doesn't work solely on text, but any inline or inline-block elements */
/* The padding uses percentages instead of pixels due to responsive web design where you want your layout design to be fluid; fluid means that you have layout properties instead of rigid pixels */
.steps-box:first-of-type {
	text-align: right;
	padding-right: 3%;
	margin-top: 30px;
}

.steps-box:last-of-type {
	padding-left: 3%;
	margin-top: 70px;
}

.app-screen {
	width: 40%;
}

.works-step {
	margin-bottom: 50px;
}

.works-step:last-of-type {
	margin-bottom: 80px;
}

.works-step div {
	color: #e67e22;
	border: 2px solid #e67e22;
	display: inline-block;
	border-radius: 50%;
	height: 55px;
	width: 55px;
	text-align: center;
	padding: 5px;
	float: left;
	font-size: 150%;
	margin-right: 25px;
}

.btn-app:link,
.btn-app:visited {
	border: 0;
}

.btn-app img {
	height: 50px;
	width: auto;
	margin-right: 10px;
}

/***********************/
/* CITIES */
/***********************/

.box img {
	width: 100%;
	height: auto;
	margin-bottom: 15px;
}

.city-features {
	margin-bottom: 5px;
}

/***********************/
/* TESTIMONALS */
/***********************/

.section-testimonals {
	background-image: linear-gradient(rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.8)), url(img/back-customers.jpg);
	background-size: cover;
	color: #fff;
	background-attachment: fixed;
}

blockquote {
	padding: 2%;
	font-style: italic;
	line-height: 145%;
	position: relative;
	margin-top: 40px;
}

/* '\201C' is a ISO special character. You can find a list of ISO characters on css-trics */
/* Its very important that whenever you use a 'property' position with value of 'absolute' that the element's parent has a 'property' position of 'relative' */
blockquote:before {
	content: "\201C";
	font-size: 500%;
	display: block;
	position: absolute;
	top: -5px;
	left: -5px;
}

cite {
	font-size: 90%;
	margin-top: 25px;
	display: block;
}

cite img {
	height: 45px;
	border-radius: 50%;
	border: 1px solid #e67e22;
	margin-right: 10px;
	vertical-align: middle;
}

/***********************/
/* SECTION PLANS */
/***********************/

.section-plans {
	background-color: #f4f4f4; 
}

/* The parent element of .plan-box is .col span 1-of-3 */
/* Box Shadow properties: Horizontal Offset, Vertical Offset, Blur Radius, Spread Radius Color */
.plan-box {
	background-color: #fff;
	border-radius: 5px;
	width: 90%;
	margin-left: 5%;
	box-shadow: 0 2px 2px #d6d6d6;
}

.plan-box div {
	padding: 15px;
	border-bottom: 1px solid #e8e8e8;
}

.plan-box div:first-child {
	background-color: #fcfcfc;
	border-top-left-radius: 5px;
	border-top-right-radius: 5px;

}

.plan-box div:last-child {
	text-align: center;
	border: 0;
}

.plan-price {
	font-size: 300%;
	margin-bottom: 10px;
	font-weight: 100;
	color: #e67e22;
}

/* The span property is used to format a specific piece of a paragraph without affecting the paragraph as a whole */
/* The .plan-price span is a child element of .plan-price which is 300%. This is the reason why the font-size is so small */
.plan-price span {
	font-size: 30%;
	font-weight: 300;
}

.plan-price-meal {
	font-size: 80%;
}

.plan-box ul {
	list-style: none;
}

.plan-box ul li {
	padding: 5px 0;
}

/***********************/
/* FORM */
/***********************/

.contact-form {
	width: 60%;
	margin: 0 auto;
}

/* input[type=text] will affect the input specific element with type equal to text whereas input[type=email] will affect the input specific element with type equal to email */
input[type=text],
input[type=email],
select,
textarea {
	width: 100%;
	padding: 7px;
	border-radius: 3px;
	border: 1px solid #ccc;
}

textareat {
	height: 100px;
}

input[type=checkbox] {
	margin: 10px 5px 10px 0;
}

/* This will remove browser focus borders */
*:focus {
	outline: none;
}

/***********************/
/* FOOTER */
/***********************/

footer {
	background-color: #333;
	padding: 50px;
	font-size: 80%;
}

.footer-nav {
	list-style: none;
	float: left;
}

.social-links {
	list-style: none;
	float: right;
}

.footer-nav li,
.social-links li {
	display: inline-block;
	margin-right: 20px;
}

.footer-nav li:last-child,
.social-links li:last-child {
	margin: 0;
}

.footer-nav li a:link,
.footer-nav li a:visited,
.social-links li a:link,
.social-links li a:visited {
	text-decoration: none;
	border: 0;
	color: #888;
	transition: 
}

.footer-nav li a:hover,
.footer-nav li a:active {
	color: #ddd;
}

.social-links li a:link,
.social-links li a:visited {
	font-size: 160%;
}

.ion-social-facebook,
.ion-social-twitter,
.ion-social-googleplus,
.ion-social-instagram {
	transition: color: 0.2s;
}

.ion-social-facebook:hover {
	color: #3b5998;
}

.ion-social-twitter:hover {
	color: #55acee;
}

.ion-social-googleplus:hover {
	color: #dd4b39;
}

.ion-social-instagram:hover {
	color: #125688;
}

footer p {
	color: #888;
	text-align: center;
	margin-top: 20px;
}